<Page
    x:Class="三相智慧能源网关调试软件.View.ServerCenter.DlmsClientPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:三相智慧能源网关调试软件.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dlmsControl="clr-namespace:三相智慧能源网关调试软件.MyControl.DLMSControl"
    xmlns:local="clr-namespace:三相智慧能源网关调试软件.View.ServerCenter"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:myControl="clr-namespace:三相智慧能源网关调试软件.MyControl"
    xmlns:三相智慧能源网关调试软件="clr-namespace:三相智慧能源网关调试软件"
    Title="DLMSClientPage"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding Source={StaticResource Locator}, Path=DlmsClient}"
    mc:Ignorable="d">
    <Page.Resources>
        <Style x:Key="ToggleButtonStyle12" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle
                                        Margin="2"
                                        SnapsToDevicePixels="True"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                        StrokeDashArray="1 2"
                                        StrokeThickness="1" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="materialDesign:ToggleButtonAssist.SwitchTrackOnBackground" Value="{DynamicResource PrimaryHueLightBrush}" />
            <Setter Property="materialDesign:ToggleButtonAssist.SwitchTrackOffBackground" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="0,1,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut" />
                            <Storyboard x:Key="HideRipple">
                                <DoubleAnimation
                                    Storyboard.TargetName="RippleThumb"
                                    Storyboard.TargetProperty="Opacity"
                                    To="0"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                            <Storyboard x:Key="ShowRipple">
                                <DoubleAnimation
                                    Storyboard.TargetName="RippleThumb"
                                    Storyboard.TargetProperty="Opacity"
                                    To="0.26"
                                    Duration="0">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetName="RippleThumb"
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                    From="1"
                                    To="2.5"
                                    Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetName="RippleThumb"
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                    From="1"
                                    To="2.5"
                                    Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Viewbox Width="80">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Rectangle
                                    x:Name="Track"
                                    Width="40"
                                    Height="15"
                                    Margin="4.211,5,4.211,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Fill="{Binding (materialDesign:ToggleButtonAssist.SwitchTrackOffBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                    Opacity="0.26"
                                    RadiusX="7.5"
                                    RadiusY="7.5"
                                    Stroke="{x:Null}" />
                                <Grid
                                    x:Name="ThumbHolder"
                                    Grid.Column="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Grid.RenderTransform>
                                        <TranslateTransform X="0" Y="0" />
                                    </Grid.RenderTransform>
                                    <Ellipse
                                        x:Name="RippleThumb"
                                        Width="25"
                                        Height="25"
                                        Margin="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{DynamicResource PrimaryHueLightBrush}"
                                        IsHitTestVisible="False"
                                        Opacity="0.26"
                                        RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                        <Ellipse
                                            x:Name="Thumb"
                                            Width="25"
                                            Height="25"
                                            Margin="0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Effect="{DynamicResource MaterialDesignShadowDepth1}"
                                            Fill="#FFFAFAFA"
                                            RenderTransformOrigin="0.5,0.5"
                                            Stroke="{x:Null}" />
                                    </AdornerDecorator>

                                </Grid>
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    FlowDirection="LeftToRight" />
                            </Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition
                                            GeneratedDuration="0"
                                            GeneratedEasingFunction="{x:Null}"
                                            From="*"
                                            To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbHolder" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23.5">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut" />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition
                                            GeneratedDuration="0"
                                            GeneratedEasingFunction="{x:Null}"
                                            From="Checked"
                                            To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbHolder" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="23.5" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut" />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="ThumbHolder"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                To="23.5"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="ThumbHolder"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                To="0"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Thumb" Property="Fill" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter TargetName="Track" Property="Fill" Value="{Binding (materialDesign:ToggleButtonAssist.SwitchTrackOnBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="materialDesign:ToggleButtonAssist.HasOnContent" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ContentPresenter" Property="Content" Value="{Binding (materialDesign:ToggleButtonAssist.OnContent), RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter TargetName="ContentPresenter" Property="ContentTemplate" Value="{Binding (materialDesign:ToggleButtonAssist.OnContentTemplate), RelativeSource={RelativeSource TemplatedParent}}" />
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True" />
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="RippleThumb"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.26"
                                                Duration="0">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="RippleThumb"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                From="1"
                                                To="2.5"
                                                Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="RippleThumb"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                From="1"
                                                To="2.5"
                                                Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="RippleThumb"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Thumb" Property="Fill" Value="#FFBDBDBD" />
                                <Setter TargetName="Track" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.12" Color="Black" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <materialDesign:Card>


        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.Row="0"
                Grid.Column="2"
                Orientation="Horizontal">
                <Button
                    Width="100"
                    Margin="3"
                    Command="{Binding InitRequestCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontFamily="/Fonts/#iconfont" Text="&#xe610;" />
                        <TextBlock Text="Init" />
                    </StackPanel>
                </Button>
                <Button
                    Width="100"
                    Margin="3"
                    Command="{Binding ReleaseRequestCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontFamily="/Fonts/#iconfont" Text="&#xe718;" />
                        <TextBlock Text="Release" />
                    </StackPanel>

                </Button>
                <ToggleButton
                    x:Name="ToggleButtonSelectChannel"
                    Margin="10,0,0,0"
                    Click="ToggleButtonSelectChannel_OnClick"
                    Content="SerialPort"
                    IsChecked="False"
                    Style="{StaticResource ToggleButtonStyle12}" />
                <Button Content="ShowDetail" />


            </StackPanel>
            <ListBox
                x:Name="ListBox"
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                DataContext="{Binding Source={StaticResource Locator}, Path=TcpServer}"
                FontSize="20"
                ItemsSource="{Binding TcpServerHelper.SocketClientList}"
                KeyDown="UIElement_OnKeyDown"
                SelectedItem="{Binding DLMSClient.CurrentSocket}"
                SelectionChanged="Selector_OnSelectionChanged">

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border
                                        x:Name="border"
                                        Margin="3"
                                        BorderBrush="{DynamicResource PrimaryHueDarkBrush}"
                                        BorderThickness="2"
                                        CornerRadius="50 0 0 50">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                                            <Setter Property="FontSize" Value="20" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource SecondaryHueMidBrush}"
                                Kind="Star" />
                            <TextBlock Text="{Binding RemoteEndPoint}" />

                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <TabControl Grid.Row="1" Grid.Column="2">
                <TabItem Header="Data">
                    <dlmsControl:DataControl />
                </TabItem>
                <TabItem Header="Register">
                    <dlmsControl:RegisterControl />
                </TabItem>
                <TabItem Header="UtilityTables">

                    <dlmsControl:TaiAngControl />

                </TabItem>
                <TabItem Header="ProfileGeneric">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <dlmsControl:ProfileGenericUserControl />
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Clock">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <dlmsControl:ClockControl />
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="LoadIdentification">
                    <dlmsControl:LoadIdentificationUserControl />
                </TabItem>
            </TabControl>
        </Grid>
    </materialDesign:Card>
</Page>