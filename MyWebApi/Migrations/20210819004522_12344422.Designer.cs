// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebApi.Data;

namespace MyWebApi.Migrations
{
    [DbContext(typeof(MeterDbContext))]
    [Migration("20210819004522_12344422")]
    partial class _12344422
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MyWebApi.Entities.Energy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnergyData")
                        .HasColumnType("TEXT");

                    b.Property<int>("MeterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MeterId1")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MeterId1");

                    b.ToTable("Energies");
                });

            modelBuilder.Entity("MyWebApi.Entities.Meter", b =>
                {
                    b.Property<string>("MeterId")
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.HasKey("MeterId");

                    b.ToTable("Meters");

                    b.HasData(
                        new
                        {
                            MeterId = "000000000001"
                        });
                });

            modelBuilder.Entity("MyWebApi.Entities.Power", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("MeterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MeterId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("PowerData")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MeterId1");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("MyWebApi.Entities.Energy", b =>
                {
                    b.HasOne("MyWebApi.Entities.Meter", "Meter")
                        .WithMany("Energies")
                        .HasForeignKey("MeterId1");

                    b.Navigation("Meter");
                });

            modelBuilder.Entity("MyWebApi.Entities.Power", b =>
                {
                    b.HasOne("MyWebApi.Entities.Meter", "Meter")
                        .WithMany("Powers")
                        .HasForeignKey("MeterId1");

                    b.Navigation("Meter");
                });

            modelBuilder.Entity("MyWebApi.Entities.Meter", b =>
                {
                    b.Navigation("Energies");

                    b.Navigation("Powers");
                });
#pragma warning restore 612, 618
        }
    }
}
